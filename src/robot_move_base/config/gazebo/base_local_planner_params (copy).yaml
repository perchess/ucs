TrajectoryPlannerROS:
  max_vel_x: 3.0
  min_vel_x: -0.50
  max_rotational_vel: 1.5
  min_in_place_rotational_vel: 1.0

  acc_lim_th: 0.1
  acc_lim_x: 0.3
  acc_lim_y: 0.0

  holonomic_robot: false

  oscillation_reset_dist: 0.5
  escape_vel: -0.5

  sim_time: 5.0
  sim_granularity: 0.3
  vx_samples: 10

  occdist_scale: 0.01

  planner_frequency: 1.0

  publish_cost_grid_pc: false

recovery_behaviour_enabled: true
controller_patience: 10
oscillation_timeout: 10
max_planning_retries: 5

recovery_behaviors:
  - {name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}
#  - {name: stepback_and_steerturn_recovery, type: stepback_and_steerturn_recovery/StepBackAndSteerTurnRecovery}
  - {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}

#stepback_and_steerturn_recovery:
#    # 最初の一回だけ旋回したい場合にtrue
#    only_single_steering: true
#    # リカバリ行動の試行回数[回]
#    trial_times         : 3
#    # 障害物までの許容距離[m]．
#    #-- 移動中に，移動方向に対して最も近い障害物がこの距離以内に出現したら停止する．
#    obstacle_patience   : 0.4
#    #-- 移動中に，障害物を確認する頻度[回/sec]
#    obstacle_check_frequency: 5.0
#    # 障害物探索時の角度の分解能[rad] costmapアクセス数を低減したいときに調整する．
#    sim_angle_resolution: 0.1
#    # back(初回後退時の速度[m/s], 移動距離[m], タイムアウト[sec])
#    linear_vel_back     : -1.5
#    step_back_length    : 1.5
#    step_back_timeout   : 10.0
#    # steer(旋回時の直進速度[m/s], 回転速さ(環境に寄って±が変わる)[rad/s], 目標回転角度[rad], タイムアウト[sec])
#    linear_vel_steer    : 0.3
#    angular_speed_steer : 1.0
#    turn_angle          : 0.78
#    steering_timeout    : 10.0
#        # forward(旋回→直進→旋回の直進時の速度[m/s], 目標移動距離[m])
#    linear_vel_forward  : 0.3
#    step_forward_length : 1.0
#    step_forward_timeout: 15.0

DWAPlannerROS:
  # Robot configuration parameters
  acc_lim_x: 2.5
  acc_lim_y: 0
  acc_lim_th: 3.2

  max_vel_x: 0.9
  min_vel_x: -0.5
  max_vel_y: 0
  min_vel_y: 0

  max_trans_vel: 0.55
  min_trans_vel: 0.1
  max_rot_vel: 1.5
  min_rot_vel: 0.2

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false

  # # Forward Simulation Parameters
  # sim_time: 2.0
  # sim_granularity: 0.02
  # vx_samples: 6
  # vy_samples: 0
  vtheta_samples: 35
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  # path_distance_bias: 32.0 # The weighting for how much the controller should stay close to the path it was given
  # goal_distance_bias: 24.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 5 # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 0.325 # The distance from the center point of the robot to place an additional scoring point, in meters
  # stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the veolicty at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by
  #

#TebLocalPlannerROS:

#    odom_topic: odom
#    map_frame: map
#    # Trajectory

#    teb_autosize: True
#    dt_ref: 0.6
#    #dt_hysteresis: 0.1
#    global_plan_overwrite_orientation: True
#    max_global_plan_lookahead_dist: 2.0
#    # feasibility_check_no_poses: 2
#    #
#    # Robot

#    max_vel_x: 0.3 #3.0
#    max_vel_x_backwards: 0.2 #5.0
#    max_vel_y: 0.0
#    max_vel_theta: 0.2 #1.1 # the angular velocity is also bounded by min_turning_radius in case of a carlike robot (r = v / omega)
#    acc_lim_x: 0.1 #5.0
#    acc_lim_theta: 0.01
#    #
#    # # ********************** Carlike robot parameters ********************
#    min_turning_radius: 1.95        # Min turning radius of the carlike robot (compute value using a model or adjust with rqt_reconfigure manually)
#    wheelbase: 2.0                 # Wheelbase of our robot
#    cmd_angle_instead_rotvel: true # stage simulator takes the angle instead of the rotvel as input (twist message)
#    # # ********************************************************************
#    #
#    footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
#       type: "polygon"
#    #   radius: 0.2 # for type "circular"
#    #    #line_start: [-1.0, 0.0] # for type "line"
#    #    #line_end: [1.0, 0.0] # for type "line"
#    #   front_offset: 0.2 # for type "two_circles"
#    #   front_radius: 0.2 # for type "two_circles"
#    #   rear_offset: 0.2 # for type "two_circles"
#    #   rear_radius: 0.2 # for type "two_circles"
#       vertices: [[0.65, 0.35], [0.65, -0.35], [-0.65, -0.35], [-0.65, 0.35]] # for type "polygon"
##       footprint: [[0.65, 0.35], [0.65, -0.35], [-0.65, -0.35], [-0.65, 0.35]] #unit03
#    #
#    # GoalTolerance
#    #
#    # xy_goal_tolerance: 1.0
#    # yaw_goal_tolerance: 0.5
#    # free_goal_vel: False
#    #
#    # Obstacles

#    min_obstacle_dist: 0.5 # This value must also include our robot's expansion, since footprint_model is set to "line".
#    include_costmap_obstacles: True
#    costmap_obstacles_behind_robot_dist: 1.0
#    obstacle_poses_affected: 15
#    # costmap_converter_plugin: ""
#    # costmap_converter_spin_thread: True
#    # costmap_converter_rate: 5

#    # Optimization

#    no_inner_iterations: 4
#    no_outer_iterations: 3
#    # optimization_activate: True
#    # optimization_verbose: False
#    # penalty_epsilon: 0.1
#    # weight_max_vel_x: 2
#    # weight_max_vel_theta: 1
#    # weight_acc_lim_x: 1
#    # weight_acc_lim_theta: 1
#    # weight_kinematics_nh: 1000
#    # weight_kinematics_forward_drive: 1
#    # weight_kinematics_turning_radius: 1
#    # weight_optimaltime: 1
#    # weight_obstacle: 50
#    # weight_dynamic_obstacle: 10 # not in use yet
#    #
#    # Homotopy Class Planner
#    #
#    # enable_homotopy_class_planning: True
#    # enable_multithreading: True
#    # simple_exploration: False
#    # max_number_classes: 4
#    # selection_cost_hysteresis: 1.0
#    # selection_obst_cost_scale: 1.0
#    # selection_alternative_time_cost: False
#    # roadmap_graph_no_samples: 15
#    # roadmap_graph_area_width: 5
#    # h_signature_prescaler: 0.5
#    # h_signature_threshold: 0.1
#    # obstacle_keypoint_offset: 0.1
#    # obstacle_heading_threshold: 0.45
#    # visualize_hc_graph: False#
TebLocalPlannerROS:

 # +++ Robot Configuration Parameters

 max_vel_x: 0.5 #0.25
 acc_lim_x: 0.1
 max_vel_x_backwards: 0.2 #See optimization parameter weight_kinematics_forward_drive

 max_vel_theta: 0.1
 acc_lim_theta: 0.01
 # # ********************** Carlike robot parameters ********************
 min_turning_radius: 1.95
 cmd_angle_instead_rotvel: True
 wheelbase: 0.81
# # ********************** Carlike robot parameters ********************

 # Note, reduce weight_kinematics_nh significantly in order to adjust the tradeoff between usual driving and strafing.
 max_vel_y: 0.0 #0.1
 acc_lim_y: 0.0 #0.08

 footprint_model:
  type: "polygon"
  vertices: [
  [0.65, 0.35],
  [0.65, -0.35],
  [-0.65, -0.35],
  [-0.65, 0.35] ]
#  vertices: [ [0.29, 0.19],
#              [-0.29, 0.19],
#              [-0.29, -0.19],
#              [0.29, -0.19],
#              [0.29, -0.11],
#              [0.36, -0.11],
#              [0.36, 0.11],
#              [0.29, 0.11] ]

 # +++ Goal Tolerance

 xy_goal_tolerance: 0.045
 yaw_goal_tolerance: 0.05
 free_goal_vel: False

# +++ Trajectory Configuration

 teb_autosize: True
 dt_ref: 0.6 #0.24
 #dt_hysteresis: 0.1
 min_samples: 3
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 1.2
 feasibility_check_no_poses: 5
 allow_init_with_backwards_motion: False #This is only recommended if the robot is equipped with rear sensors

 # +++ Obstacles

 min_obstacle_dist: 0.1
 inflation_dist: 0.5
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 30
 legacy_obstacle_association: False #!
 obstacle_association_force_inclusion_factor: 1.5
 obstacle_association_cutoff_factor: 5

 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # +++ Optimization

 no_inner_iterations: 5
 no_outer_iterations: 4
 penalty_epsilon: 0.05

 weight_max_vel_x: 4.0
 weight_max_vel_theta: 1.0
 weight_acc_lim_x: 1.0
 weight_acc_lim_theta: 1.0
# weight_kinematics_nh: 2000
 weight_kinematics_forward_drive: 6.0
 weight_kinematics_turning_radius: 10.0
 weight_optimaltime: 1.0
 weight_obstacle: 50.0
 weight_viapoint: 1.0
 weight_inflation: 0.1
 weight_adapt_factor: 2.0

 optimization_activate: True
 optimization_verbose: False
 #weight_dynamic_obstacle: 10 # not in use yet

 # +++ Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_obst_cost_scale: 100.0
 selection_viapoint_cost_scale: 1.0
 selection_alternative_time_cost: False #If true, time cost (sum of squared time differences) is replaced by the total transition time (sum of time differences)
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 4
 h_signature_prescaler: 1.0
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
 viapoints_all_candidates: True

 # If true, distinctive trajectories are explored using a simple left-right approach (pass each obstacle on the left or right side) for path generation, otherwise sample possible roadmaps randomly in a specified region between start and goal.
 simple_exploration: False

 # +++ Miscellaneous pars

 odom_topic: odom
 map_frame: map

